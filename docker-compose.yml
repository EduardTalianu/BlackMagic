services:
  kali:
    image: kalilinux/kali-rolling:latest
    container_name: kali-llm-web-kali-1
    command: tail -f /dev/null
    volumes:
      - ./shared:/shared
      - ./shared/work:/app/work
    networks:
      - kali-net
    restart: unless-stopped
    # Increase shared memory for parallel operations
    shm_size: '2gb'

  driver:
    build: .
    container_name: kali-llm-web-driver-1
    depends_on:
      - kali
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./shared:/shared
      - ./shared/logs:/app/logs
      - ./shared/work:/app/work
    networks:
      - kali-net
    environment:
      # LLM Configuration
      - MOONSHOT_API_KEY=${MOONSHOT_API_KEY}
      - LLM_BASE_URL=${LLM_BASE_URL:-https://api.moonshot.ai/v1}
      - LLM_MODEL=${LLM_MODEL:-kimi-k2-0905-preview}
      
      # Flask Configuration
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - AUTO_CONTINUE_DELAY=${AUTO_CONTINUE_DELAY:-10}
      
      # Parallel Execution Configuration (NEW)
      - PARALLEL_ENABLED=${PARALLEL_ENABLED:-true}
      - PARALLEL_MAX_WORKERS=${PARALLEL_MAX_WORKERS:-5}
      - PARALLEL_MAX_LLM=${PARALLEL_MAX_LLM:-3}
      - LLM_MAX_RETRIES=${LLM_MAX_RETRIES:-5}
      - LLM_BASE_DELAY=${LLM_BASE_DELAY:-2}
      - DOCKER_TIMEOUT=${DOCKER_TIMEOUT:-90}
      - USE_NODE_PREFIXES=${USE_NODE_PREFIXES:-true}
    ports:
      - "5000:5000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000"]
      interval: 30s
      timeout: 10s
      retries: 3
    # Resource limits for parallel execution
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 4G
        reservations:
          cpus: '2.0'
          memory: 2G

networks:
  kali-net:
    driver: bridge